; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\output\led.o --asm_dir=.\listing\ --list_dir=.\listing\ --depend=.\output\led.d --cpu=Cortex-M4 --apcs=interwork -O0 --diag_suppress=9931 -I..\ -I..\Inc -I..\..\..\Libraries\STM32F2xx_StdPeriph_Driver\inc -I..\..\..\Libraries\CMSIS\Device\ST\STM32F2xx\Include -I..\..\Pfm6Ctrl\inc\app -I..\..\Pfm6Ctrl\src\wifi -I..\..\..\Utilities\FatFs_R0.09a -I.\RTE\_iap...PFM6 -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.4.0\CMSIS\Core\Include -IC:\Keil_v5\ARM\PACK\Keil\STM32F4xx_DFP\2.9.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include -D__MICROLIB -D__UVISION_VERSION=523 -D_RTE_ -DSTM32F405xx -DUSE_STDPERIPH_DRIVER -DUSE_USB_OTG_FS -D__PFM6__ -DHSE_VALUE=25000000 -DWITH_COM_PORT --omf_browse=.\output\led.crf ..\Src\led.c]
                          THUMB

                          AREA ||i.Initialize_LED||, CODE, READONLY, ALIGN=2

                  Initialize_LED PROC
;;;98     //
;;;99     void	Initialize_LED(char *p[], int n) {
000000  b57c              PUSH     {r2-r6,lr}
000002  4605              MOV      r5,r0
000004  460e              MOV      r6,r1
;;;100    GPIO_InitTypeDef	GPIO_InitStructure;
;;;101    int		i;
;;;102    			GPIO_StructInit(&GPIO_InitStructure);
000006  4668              MOV      r0,sp
000008  f7fffffe          BL       GPIO_StructInit
;;;103    			GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
00000c  2001              MOVS     r0,#1
00000e  f88d0004          STRB     r0,[sp,#4]
;;;104    #ifndef __DISCO__
;;;105    			GPIO_InitStructure.GPIO_OType = GPIO_OType_OD;
000012  f88d0006          STRB     r0,[sp,#6]
;;;106    #else
;;;107    			GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
;;;108    #endif
;;;109    			if(!n)
000016  b916              CBNZ     r6,|L1.30|
;;;110    				_lightshow();
000018  f7fffffe          BL       _lightshow
00001c  e062              B        |L1.228|
                  |L1.30|
;;;111    			else
;;;112    				for(i=0; i<n; ++i) {
00001e  2400              MOVS     r4,#0
000020  e05e              B        |L1.224|
                  |L1.34|
;;;113    					switch(*p[i]) {
000022  f8550024          LDR      r0,[r5,r4,LSL #2]
000026  7800              LDRB     r0,[r0,#0]
000028  3861              SUBS     r0,r0,#0x61
00002a  2809              CMP      r0,#9
00002c  d233              BCS      |L1.150|
00002e  e8dff000          TBB      [pc,r0]
000032  050a              DCB      0x05,0x0a
000034  0f14191e          DCB      0x0f,0x14,0x19,0x1e
000038  23282d00          DCB      0x23,0x28,0x2d,0x00
;;;114    						case 'a':gpio[i]=GPIOA;break;
00003c  482a              LDR      r0,|L1.232|
00003e  492b              LDR      r1,|L1.236|
000040  f8410024          STR      r0,[r1,r4,LSL #2]
000044  e02c              B        |L1.160|
;;;115    						case 'b':gpio[i]=GPIOB;break;
000046  482a              LDR      r0,|L1.240|
000048  4928              LDR      r1,|L1.236|
00004a  f8410024          STR      r0,[r1,r4,LSL #2]
00004e  e027              B        |L1.160|
;;;116    						case 'c':gpio[i]=GPIOC;break;
000050  4828              LDR      r0,|L1.244|
000052  4926              LDR      r1,|L1.236|
000054  f8410024          STR      r0,[r1,r4,LSL #2]
000058  e022              B        |L1.160|
;;;117    						case 'd':gpio[i]=GPIOD;break;
00005a  4827              LDR      r0,|L1.248|
00005c  4923              LDR      r1,|L1.236|
00005e  f8410024          STR      r0,[r1,r4,LSL #2]
000062  e01d              B        |L1.160|
;;;118    						case 'e':gpio[i]=GPIOE;break;
000064  4825              LDR      r0,|L1.252|
000066  4921              LDR      r1,|L1.236|
000068  f8410024          STR      r0,[r1,r4,LSL #2]
00006c  e018              B        |L1.160|
;;;119    						case 'f':gpio[i]=GPIOF;break;
00006e  4824              LDR      r0,|L1.256|
000070  491e              LDR      r1,|L1.236|
000072  f8410024          STR      r0,[r1,r4,LSL #2]
000076  e013              B        |L1.160|
;;;120    						case 'g':gpio[i]=GPIOG;break;
000078  4822              LDR      r0,|L1.260|
00007a  491c              LDR      r1,|L1.236|
00007c  f8410024          STR      r0,[r1,r4,LSL #2]
000080  e00e              B        |L1.160|
;;;121    						case 'h':gpio[i]=GPIOH;break;
000082  4821              LDR      r0,|L1.264|
000084  4919              LDR      r1,|L1.236|
000086  f8410024          STR      r0,[r1,r4,LSL #2]
00008a  e009              B        |L1.160|
;;;122    						case 'i':gpio[i]=GPIOI;break;
00008c  481f              LDR      r0,|L1.268|
00008e  4917              LDR      r1,|L1.236|
000090  f8410024          STR      r0,[r1,r4,LSL #2]
000094  e004              B        |L1.160|
                  |L1.150|
;;;123    						default:gpio[i]=NULL;
000096  2000              MOVS     r0,#0
000098  4914              LDR      r1,|L1.236|
00009a  f8410024          STR      r0,[r1,r4,LSL #2]
00009e  bf00              NOP                            ;113
                  |L1.160|
0000a0  bf00              NOP                            ;114
;;;124    					}
;;;125    					GPIO_InitStructure.GPIO_Pin = pin[i]=1<<(atoi(++p[i]));
0000a2  f8551024          LDR      r1,[r5,r4,LSL #2]
0000a6  1c49              ADDS     r1,r1,#1
0000a8  f8451024          STR      r1,[r5,r4,LSL #2]
0000ac  4608              MOV      r0,r1
0000ae  f7fffffe          BL       atoi
0000b2  2101              MOVS     r1,#1
0000b4  4081              LSLS     r1,r1,r0
0000b6  b208              SXTH     r0,r1
0000b8  4915              LDR      r1,|L1.272|
0000ba  f8210014          STRH     r0,[r1,r4,LSL #1]
0000be  9000              STR      r0,[sp,#0]
;;;126    					GPIO_Init(gpio[i], &GPIO_InitStructure);		
0000c0  490a              LDR      r1,|L1.236|
0000c2  f8510024          LDR      r0,[r1,r4,LSL #2]
0000c6  4669              MOV      r1,sp
0000c8  f7fffffe          BL       GPIO_Init
;;;127    					__LED_OFF(gpio[i],pin[i]);
0000cc  4a10              LDR      r2,|L1.272|
0000ce  f8322014          LDRH     r2,[r2,r4,LSL #1]
0000d2  b291              UXTH     r1,r2
0000d4  4a05              LDR      r2,|L1.236|
0000d6  f8520024          LDR      r0,[r2,r4,LSL #2]
0000da  f7fffffe          BL       GPIO_SetBits
0000de  1c64              ADDS     r4,r4,#1              ;112
                  |L1.224|
0000e0  42b4              CMP      r4,r6                 ;112
0000e2  db9e              BLT      |L1.34|
                  |L1.228|
;;;128    				}
;;;129    }
0000e4  bd7c              POP      {r2-r6,pc}
                          ENDP

0000e6  0000              DCW      0x0000
                  |L1.232|
                          DCD      0x40020000
                  |L1.236|
                          DCD      gpio
                  |L1.240|
                          DCD      0x40020400
                  |L1.244|
                          DCD      0x40020800
                  |L1.248|
                          DCD      0x40020c00
                  |L1.252|
                          DCD      0x40021000
                  |L1.256|
                          DCD      0x40021400
                  |L1.260|
                          DCD      0x40021800
                  |L1.264|
                          DCD      0x40021c00
                  |L1.268|
                          DCD      0x40022000
                  |L1.272|
                          DCD      pin

                          AREA ||i._led||, CODE, READONLY, ALIGN=2

                  _led PROC
;;;38       */
;;;39     void	_led(int a, int b) {
000000  b570              PUSH     {r4-r6,lr}
000002  4604              MOV      r4,r0
000004  460e              MOV      r6,r1
;;;40     int				i;
;;;41     static 	int 	t[]={1,1,1,1,1,1,1,1,1,1};
;;;42     
;;;43     				if(a==-1) {
000006  1c60              ADDS     r0,r4,#1
000008  b9a8              CBNZ     r0,|L2.54|
;;;44     					for(i=0;i<10;++i) {
00000a  2500              MOVS     r5,#0
00000c  e010              B        |L2.48|
                  |L2.14|
;;;45     						if(t[i])
00000e  481c              LDR      r0,|L2.128|
000010  f8500025          LDR      r0,[r0,r5,LSL #2]
000014  b158              CBZ      r0,|L2.46|
;;;46     							if(!--t[i])
000016  481a              LDR      r0,|L2.128|
000018  f8500025          LDR      r0,[r0,r5,LSL #2]
00001c  1e40              SUBS     r0,r0,#1
00001e  4918              LDR      r1,|L2.128|
000020  f8410025          STR      r0,[r1,r5,LSL #2]
000024  b918              CBNZ     r0,|L2.46|
;;;47     								_led(i,0);
000026  2100              MOVS     r1,#0
000028  4628              MOV      r0,r5
00002a  f7fffffe          BL       _led
                  |L2.46|
00002e  1c6d              ADDS     r5,r5,#1              ;44
                  |L2.48|
000030  2d0a              CMP      r5,#0xa               ;44
000032  dbec              BLT      |L2.14|
                  |L2.52|
;;;48     					}
;;;49     					return;
;;;50     				}
;;;51     				if(b==0) {
;;;52     					t[a]=0;
;;;53     					__LED_OFF(gpio[a], pin[a]);
;;;54     				} else {
;;;55     					if(b==-1)
;;;56     						t[a]=0;
;;;57     					else
;;;58     						t[a]=b;
;;;59     					__LED_ON(gpio[a], pin[a]);
;;;60     				}
;;;61     }
000034  bd70              POP      {r4-r6,pc}
                  |L2.54|
000036  b96e              CBNZ     r6,|L2.84|
000038  2000              MOVS     r0,#0                 ;52
00003a  4911              LDR      r1,|L2.128|
00003c  f8410024          STR      r0,[r1,r4,LSL #2]     ;52
000040  4a10              LDR      r2,|L2.132|
000042  f8322014          LDRH     r2,[r2,r4,LSL #1]     ;53
000046  b291              UXTH     r1,r2                 ;53
000048  4a0f              LDR      r2,|L2.136|
00004a  f8520024          LDR      r0,[r2,r4,LSL #2]     ;53
00004e  f7fffffe          BL       GPIO_SetBits
000052  e012              B        |L2.122|
                  |L2.84|
000054  1c70              ADDS     r0,r6,#1              ;55
000056  b920              CBNZ     r0,|L2.98|
000058  2000              MOVS     r0,#0                 ;56
00005a  4909              LDR      r1,|L2.128|
00005c  f8410024          STR      r0,[r1,r4,LSL #2]     ;56
000060  e002              B        |L2.104|
                  |L2.98|
000062  4807              LDR      r0,|L2.128|
000064  f8406024          STR      r6,[r0,r4,LSL #2]     ;58
                  |L2.104|
000068  4a06              LDR      r2,|L2.132|
00006a  f8322014          LDRH     r2,[r2,r4,LSL #1]     ;59
00006e  b291              UXTH     r1,r2                 ;59
000070  4a05              LDR      r2,|L2.136|
000072  f8520024          LDR      r0,[r2,r4,LSL #2]     ;59
000076  f7fffffe          BL       GPIO_ResetBits
                  |L2.122|
00007a  bf00              NOP      
00007c  e7da              B        |L2.52|
;;;62     //______________________________________________________________________
                          ENDP

00007e  0000              DCW      0x0000
                  |L2.128|
                          DCD      t
                  |L2.132|
                          DCD      pin
                  |L2.136|
                          DCD      gpio

                          AREA ||i._lightshow||, CODE, READONLY, ALIGN=2

                  _lightshow PROC
;;;66     //______________________________________________________________________
;;;67     void		_lightshow() {
000000  b510              PUSH     {r4,lr}
;;;68     static 
;;;69     void	(*f)(void)=NULL;
;;;70     static	int	
;;;71     				t1=0,
;;;72     				t2=0,
;;;73     				t3=0;
;;;74     				
;;;75     				if(f==NULL) {
000002  4834              LDR      r0,|L3.212|
000004  6800              LDR      r0,[r0,#0]  ; f
000006  b938              CBNZ     r0,|L3.24|
;;;76     					f=App_Loop;
000008  4833              LDR      r0,|L3.216|
00000a  6800              LDR      r0,[r0,#0]  ; App_Loop
00000c  4931              LDR      r1,|L3.212|
00000e  6008              STR      r0,[r1,#0]  ; f
;;;77     					App_Loop=_lightshow;
000010  f2af0013          ADR      r0,_lightshow + 1
000014  4930              LDR      r1,|L3.216|
000016  6008              STR      r0,[r1,#0]  ; App_Loop
                  |L3.24|
;;;78     				}
;;;79     				if(__time__ < 10000) {
000018  4830              LDR      r0,|L3.220|
00001a  6800              LDR      r0,[r0,#0]  ; __time__
00001c  f2427110          MOV      r1,#0x2710
000020  4288              CMP      r0,r1
000022  da53              BGE      |L3.204|
;;;80     					if(!(++t1 % NN)) {
000024  482e              LDR      r0,|L3.224|
000026  6800              LDR      r0,[r0,#0]  ; t1
000028  1c40              ADDS     r0,r0,#1
00002a  492d              LDR      r1,|L3.224|
00002c  6008              STR      r0,[r1,#0]  ; t1
00002e  21c8              MOVS     r1,#0xc8
000030  fb90f2f1          SDIV     r2,r0,r1
000034  fb010012          MLS      r0,r1,r2,r0
000038  bb20              CBNZ     r0,|L3.132|
;;;81     						_led(t3,0);
00003a  2100              MOVS     r1,#0
00003c  4829              LDR      r0,|L3.228|
00003e  6800              LDR      r0,[r0,#0]  ; t3
000040  f7fffffe          BL       _led
;;;82     						++t2;
000044  4828              LDR      r0,|L3.232|
000046  6800              LDR      r0,[r0,#0]  ; t2
000048  1c40              ADDS     r0,r0,#1
00004a  4927              LDR      r1,|L3.232|
00004c  6008              STR      r0,[r1,#0]  ; t2
;;;83     						t2 %= Nk;
00004e  6808              LDR      r0,[r1,#0]  ; t2
000050  17c1              ASRS     r1,r0,#31
000052  eb007191          ADD      r1,r0,r1,LSR #30
000056  1089              ASRS     r1,r1,#2
000058  eba00181          SUB      r1,r0,r1,LSL #2
00005c  4a22              LDR      r2,|L3.232|
00005e  6011              STR      r1,[r2,#0]  ; t2
;;;84     						if(t2==t3)
000060  4610              MOV      r0,r2
000062  6800              LDR      r0,[r0,#0]  ; t2
000064  491f              LDR      r1,|L3.228|
000066  6809              LDR      r1,[r1,#0]  ; t3
000068  4288              CMP      r0,r1
00006a  d10b              BNE      |L3.132|
;;;85     								_led((t3+1)%Nk,20);
00006c  481d              LDR      r0,|L3.228|
00006e  6800              LDR      r0,[r0,#0]  ; t3
000070  1c44              ADDS     r4,r0,#1
000072  17e1              ASRS     r1,r4,#31
000074  eb047191          ADD      r1,r4,r1,LSR #30
000078  1089              ASRS     r1,r1,#2
00007a  eba40081          SUB      r0,r4,r1,LSL #2
00007e  2114              MOVS     r1,#0x14
000080  f7fffffe          BL       _led
                  |L3.132|
;;;86     					}
;;;87     					if(!(t1 % ((NN*Nk)+1))) {
000084  4816              LDR      r0,|L3.224|
000086  6800              LDR      r0,[r0,#0]  ; t1
000088  f2403121          MOV      r1,#0x321
00008c  fb90f2f1          SDIV     r2,r0,r1
000090  fb010012          MLS      r0,r1,r2,r0
000094  b9d0              CBNZ     r0,|L3.204|
;;;88     						t3=t2;
000096  4814              LDR      r0,|L3.232|
000098  6800              LDR      r0,[r0,#0]  ; t2
00009a  4912              LDR      r1,|L3.228|
00009c  6008              STR      r0,[r1,#0]  ; t3
;;;89     						_led(t3%Nk,20);
00009e  4608              MOV      r0,r1
0000a0  6804              LDR      r4,[r0,#0]  ; t3
0000a2  17e1              ASRS     r1,r4,#31
0000a4  eb047191          ADD      r1,r4,r1,LSR #30
0000a8  1089              ASRS     r1,r1,#2
0000aa  eba40081          SUB      r0,r4,r1,LSL #2
0000ae  2114              MOVS     r1,#0x14
0000b0  f7fffffe          BL       _led
;;;90     						_led((t3+1)%Nk,0);
0000b4  480b              LDR      r0,|L3.228|
0000b6  6800              LDR      r0,[r0,#0]  ; t3
0000b8  1c44              ADDS     r4,r0,#1
0000ba  17e1              ASRS     r1,r4,#31
0000bc  eb047191          ADD      r1,r4,r1,LSR #30
0000c0  1089              ASRS     r1,r1,#2
0000c2  eba40081          SUB      r0,r4,r1,LSL #2
0000c6  2100              MOVS     r1,#0
0000c8  f7fffffe          BL       _led
                  |L3.204|
;;;91     					}			
;;;92     				}
;;;93     				f();
0000cc  4801              LDR      r0,|L3.212|
0000ce  6800              LDR      r0,[r0,#0]  ; f
0000d0  4780              BLX      r0
;;;94     }
0000d2  bd10              POP      {r4,pc}
;;;95     //______________________________________________________________________________________
                          ENDP

                  |L3.212|
                          DCD      f
                  |L3.216|
                          DCD      App_Loop
                  |L3.220|
                          DCD      __time__
                  |L3.224|
                          DCD      ||t1||
                  |L3.228|
                          DCD      ||t3||
                  |L3.232|
                          DCD      ||t2||

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  gpio
                          %        40
                  pin
                          %        20

                          AREA ||.data||, DATA, ALIGN=2

                  t
                          DCD      0x00000001
                          DCD      0x00000001
                          DCD      0x00000001
                          DCD      0x00000001
                          DCD      0x00000001
                          DCD      0x00000001
                          DCD      0x00000001
                          DCD      0x00000001
                          DCD      0x00000001
                          DCD      0x00000001
                  f
                          DCD      0x00000000
                  ||t1||
                          DCD      0x00000000
                  ||t2||
                          DCD      0x00000000
                  ||t3||
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\Src\\led.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___5_led_c__led____REV16|
#line 463 "C:\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\5.4.0\\CMSIS\\Core\\Include\\cmsis_armcc.h"
|__asm___5_led_c__led____REV16| PROC
#line 464

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___5_led_c__led____REVSH|
#line 478
|__asm___5_led_c__led____REVSH| PROC
#line 479

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___5_led_c__led____RRX|
#line 665
|__asm___5_led_c__led____RRX| PROC
#line 666

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
