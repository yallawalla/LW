; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\output\io.o --asm_dir=.\listing\ --list_dir=.\listing\ --depend=.\output\io.d --cpu=Cortex-M4 --apcs=interwork -O0 --diag_suppress=9931 -I..\ -I..\Inc -I..\..\..\Libraries\STM32F2xx_StdPeriph_Driver\inc -I..\..\..\Libraries\CMSIS\Device\ST\STM32F2xx\Include -I..\..\Pfm6Ctrl\inc\app -I..\..\Pfm6Ctrl\src\wifi -I..\..\..\Utilities\FatFs_R0.09a -I.\RTE\_iap...PFM6 -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.4.0\CMSIS\Core\Include -IC:\Keil_v5\ARM\PACK\Keil\STM32F4xx_DFP\2.9.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include -D__MICROLIB -D__UVISION_VERSION=523 -D_RTE_ -DSTM32F405xx -DUSE_STDPERIPH_DRIVER -DUSE_USB_OTG_FS -D__PFM6__ -DHSE_VALUE=25000000 -DWITH_COM_PORT --omf_browse=.\output\io.crf ..\Src\io.c]
                          THUMB

                          AREA ||i.__get||, CODE, READONLY, ALIGN=1

                  __get PROC
;;;67     //
;;;68     int			__get (_buffer *p) {
000000  b518              PUSH     {r3,r4,lr}
000002  4604              MOV      r4,r0
;;;69     int			i=0;
000004  2000              MOVS     r0,#0
000006  9000              STR      r0,[sp,#0]
;;;70     				if(_buffer_pull(p,&i,1))
000008  2201              MOVS     r2,#1
00000a  4669              MOV      r1,sp
00000c  4620              MOV      r0,r4
00000e  f7fffffe          BL       _buffer_pull
000012  b108              CBZ      r0,|L1.24|
;;;71     					return i;
000014  9800              LDR      r0,[sp,#0]
                  |L1.22|
;;;72     				else
;;;73     					return EOF;
;;;74     }
000016  bd18              POP      {r3,r4,pc}
                  |L1.24|
000018  f04f30ff          MOV      r0,#0xffffffff        ;73
00001c  e7fb              B        |L1.22|
;;;75     //______________________________________________________________________________________
                          ENDP


                          AREA ||i.__put||, CODE, READONLY, ALIGN=1

                  __put PROC
;;;78     //
;;;79     int			__put (_buffer *p, int c) {
000000  b513              PUSH     {r0,r1,r4,lr}
000002  4604              MOV      r4,r0
;;;80     				if(_buffer_push(p,&c,1) == 1)
000004  2201              MOVS     r2,#1
000006  a901              ADD      r1,sp,#4
000008  4620              MOV      r0,r4
00000a  f7fffffe          BL       _buffer_push
00000e  2801              CMP      r0,#1
000010  d101              BNE      |L2.22|
;;;81     					return c;
000012  9801              LDR      r0,[sp,#4]
                  |L2.20|
;;;82     				else
;;;83     					return EOF;
;;;84     }
000014  bd1c              POP      {r2-r4,pc}
                  |L2.22|
000016  f04f30ff          MOV      r0,#0xffffffff        ;83
00001a  e7fb              B        |L2.20|
;;;85     //______________________________________________________________________________________
                          ENDP


                          AREA ||i._buffer_LIFO||, CODE, READONLY, ALIGN=1

                  _buffer_LIFO PROC
;;;98     //______________________________________________________________________________________
;;;99     int			_buffer_LIFO(_buffer *p, void *q, int n) {
000000  b530              PUSH     {r4,r5,lr}
000002  4603              MOV      r3,r0
000004  460c              MOV      r4,r1
;;;100    char		*t=p->_pull;
000006  6899              LDR      r1,[r3,#8]
;;;101    				while(n--) {
000008  e00f              B        |L3.42|
                  |L3.10|
;;;102    					if(t == p->_buf)
00000a  6818              LDR      r0,[r3,#0]
00000c  4288              CMP      r0,r1
00000e  d102              BNE      |L3.22|
;;;103    						t = &p->_buf[p->len];
000010  695d              LDR      r5,[r3,#0x14]
000012  6818              LDR      r0,[r3,#0]
000014  1941              ADDS     r1,r0,r5
                  |L3.22|
;;;104    					if(--t == p->_push)
000016  1e48              SUBS     r0,r1,#1
000018  4601              MOV      r1,r0
00001a  685d              LDR      r5,[r3,#4]
00001c  42a8              CMP      r0,r5
00001e  d102              BNE      |L3.38|
;;;105    						return EOF;
000020  f04f30ff          MOV      r0,#0xffffffff
                  |L3.36|
;;;106    					*t = ((char *)q)[n];
;;;107    				}
;;;108    				p->_pull=t;
;;;109    				return *(char *)q;
;;;110    }
000024  bd30              POP      {r4,r5,pc}
                  |L3.38|
000026  5ca0              LDRB     r0,[r4,r2]            ;106
000028  7008              STRB     r0,[r1,#0]            ;106
                  |L3.42|
00002a  1e10              SUBS     r0,r2,#0              ;101
00002c  f1a20201          SUB      r2,r2,#1              ;101
000030  d1eb              BNE      |L3.10|
000032  6099              STR      r1,[r3,#8]            ;108
000034  7820              LDRB     r0,[r4,#0]            ;109
000036  e7f5              B        |L3.36|
;;;111    //______________________________________________________________________________________
                          ENDP


                          AREA ||i._buffer_empty||, CODE, READONLY, ALIGN=1

                  _buffer_empty PROC
;;;57     //___test empty_________________________________________________________________________
;;;58     int			_buffer_empty	(_buffer *p) {
000000  4601              MOV      r1,r0
;;;59     				if(p->_pull != p->_push)
000002  e9d12001          LDRD     r2,r0,[r1,#4]
000006  4290              CMP      r0,r2
000008  d001              BEQ      |L4.14|
;;;60     					return(0);
00000a  2000              MOVS     r0,#0
                  |L4.12|
;;;61     				else
;;;62     					return(EOF);
;;;63     }
00000c  4770              BX       lr
                  |L4.14|
00000e  f04f30ff          MOV      r0,#0xffffffff        ;62
000012  e7fb              B        |L4.12|
;;;64     //______________________________________________________________________________________
                          ENDP


                          AREA ||i._buffer_init||, CODE, READONLY, ALIGN=1

                  _buffer_init PROC
;;;18     //______________________________________________________________________________________
;;;19     _buffer	*_buffer_init(int length) {
000000  b570              PUSH     {r4-r6,lr}
000002  4605              MOV      r5,r0
;;;20     _buffer	*p=calloc(1,sizeof(_buffer));
000004  2118              MOVS     r1,#0x18
000006  2001              MOVS     r0,#1
000008  f7fffffe          BL       calloc
00000c  4604              MOV      r4,r0
;;;21     
;;;22     				if(p) {
00000e  b15c              CBZ      r4,|L5.40|
;;;23     					p->_buf=p->_push=p->_pull=calloc(length,sizeof(char));
000010  2101              MOVS     r1,#1
000012  4628              MOV      r0,r5
000014  f7fffffe          BL       calloc
000018  60a0              STR      r0,[r4,#8]
00001a  6060              STR      r0,[r4,#4]
00001c  6020              STR      r0,[r4,#0]
;;;24     					p->len=length;
00001e  6165              STR      r5,[r4,#0x14]
;;;25     					if(p->_buf)
000020  6820              LDR      r0,[r4,#0]
000022  b108              CBZ      r0,|L5.40|
;;;26     						return(p);					
000024  4620              MOV      r0,r4
                  |L5.38|
;;;27     				}
;;;28     				return(NULL);
;;;29     }
000026  bd70              POP      {r4-r6,pc}
                  |L5.40|
000028  2000              MOVS     r0,#0                 ;28
00002a  e7fc              B        |L5.38|
;;;30     //___push_______________________________________________________________________________
                          ENDP


                          AREA ||i._buffer_pull||, CODE, READONLY, ALIGN=1

                  _buffer_pull PROC
;;;44     //___pull_______________________________________________________________________________
;;;45     int			_buffer_pull(_buffer *p, void *q, int n) {
000000  b5f0              PUSH     {r4-r7,lr}
000002  4603              MOV      r3,r0
000004  460c              MOV      r4,r1
;;;46     int			i=0;
000006  2000              MOVS     r0,#0
;;;47     char		*t=p->_pull,
000008  6899              LDR      r1,[r3,#8]
;;;48     				*r=(char *)q;
00000a  4625              MOV      r5,r4
;;;49     				while(n-- && t != p->_push) {
00000c  e00b              B        |L6.38|
                  |L6.14|
;;;50     					r[i++] = *t++;
00000e  f811cb01          LDRB     r12,[r1],#1
000012  4606              MOV      r6,r0
000014  1c40              ADDS     r0,r0,#1
000016  f805c006          STRB     r12,[r5,r6]
;;;51     					if(t == &p->_buf[p->len])
00001a  695f              LDR      r7,[r3,#0x14]
00001c  681e              LDR      r6,[r3,#0]
00001e  443e              ADD      r6,r6,r7
000020  428e              CMP      r6,r1
000022  d100              BNE      |L6.38|
;;;52     						t=p->_buf;
000024  6819              LDR      r1,[r3,#0]
                  |L6.38|
000026  1e16              SUBS     r6,r2,#0              ;49
000028  f1a20201          SUB      r2,r2,#1              ;49
00002c  d002              BEQ      |L6.52|
00002e  685e              LDR      r6,[r3,#4]            ;49
000030  428e              CMP      r6,r1                 ;49
000032  d1ec              BNE      |L6.14|
                  |L6.52|
;;;53     				}
;;;54     				p->_pull=t;
000034  6099              STR      r1,[r3,#8]
;;;55     				return(i);				
;;;56     }
000036  bdf0              POP      {r4-r7,pc}
;;;57     //___test empty_________________________________________________________________________
                          ENDP


                          AREA ||i._buffer_push||, CODE, READONLY, ALIGN=1

                  _buffer_push PROC
;;;30     //___push_______________________________________________________________________________
;;;31     int			_buffer_push(_buffer *p, void *q, int n) {
000000  b570              PUSH     {r4-r6,lr}
000002  4603              MOV      r3,r0
000004  460c              MOV      r4,r1
000006  4615              MOV      r5,r2
;;;32     char		*r=q,
000008  4622              MOV      r2,r4
;;;33     				*t=p->_push;
00000a  6859              LDR      r1,[r3,#4]
;;;34     				while(n--) {
00000c  e00f              B        |L7.46|
                  |L7.14|
;;;35     					*t++ = *r++;
00000e  f8120b01          LDRB     r0,[r2],#1
000012  f8010b01          STRB     r0,[r1],#1
;;;36     					if(t == &p->_buf[p->len])
000016  695e              LDR      r6,[r3,#0x14]
000018  6818              LDR      r0,[r3,#0]
00001a  4430              ADD      r0,r0,r6
00001c  4288              CMP      r0,r1
00001e  d100              BNE      |L7.34|
;;;37     						t = p->_buf;
000020  6819              LDR      r1,[r3,#0]
                  |L7.34|
;;;38     					if(t == p->_pull)
000022  6898              LDR      r0,[r3,#8]
000024  4288              CMP      r0,r1
000026  d102              BNE      |L7.46|
;;;39     						return EOF;
000028  f04f30ff          MOV      r0,#0xffffffff
                  |L7.44|
;;;40     				}
;;;41     				p->_push=t;
;;;42     				return(r[-1]);
;;;43     }
00002c  bd70              POP      {r4-r6,pc}
                  |L7.46|
00002e  1e28              SUBS     r0,r5,#0              ;34
000030  f1a50501          SUB      r5,r5,#1              ;34
000034  d1eb              BNE      |L7.14|
000036  6059              STR      r1,[r3,#4]            ;41
000038  f8120c01          LDRB     r0,[r2,#-1]           ;42
00003c  e7f6              B        |L7.44|
;;;44     //___pull_______________________________________________________________________________
                          ENDP


                          AREA ||i._io_init||, CODE, READONLY, ALIGN=2

                  _io_init PROC
;;;85     //______________________________________________________________________________________
;;;86     _io			*_io_init(int rxl, int txl) {
000000  b570              PUSH     {r4-r6,lr}
000002  4606              MOV      r6,r0
000004  460d              MOV      r5,r1
;;;87     _io			*p=calloc(1,sizeof(_io));
000006  2118              MOVS     r1,#0x18
000008  2001              MOVS     r0,#1
00000a  f7fffffe          BL       calloc
00000e  4604              MOV      r4,r0
;;;88     				if(p) {
000010  b18c              CBZ      r4,|L8.54|
;;;89     					p->put=__put;
000012  480a              LDR      r0,|L8.60|
000014  6120              STR      r0,[r4,#0x10]
;;;90     					p->get=__get;
000016  480a              LDR      r0,|L8.64|
000018  60e0              STR      r0,[r4,#0xc]
;;;91     					p->rx=_buffer_init(rxl);
00001a  4630              MOV      r0,r6
00001c  f7fffffe          BL       _buffer_init
000020  6020              STR      r0,[r4,#0]
;;;92     					p->tx=_buffer_init(txl);
000022  4628              MOV      r0,r5
000024  f7fffffe          BL       _buffer_init
000028  6060              STR      r0,[r4,#4]
;;;93     					if(p->rx && p->tx)
00002a  6820              LDR      r0,[r4,#0]
00002c  b118              CBZ      r0,|L8.54|
00002e  6860              LDR      r0,[r4,#4]
000030  b108              CBZ      r0,|L8.54|
;;;94     						return(p);				
000032  4620              MOV      r0,r4
                  |L8.52|
;;;95     				}
;;;96     				return(NULL);
;;;97     }
000034  bd70              POP      {r4-r6,pc}
                  |L8.54|
000036  2000              MOVS     r0,#0                 ;96
000038  e7fc              B        |L8.52|
;;;98     //______________________________________________________________________________________
                          ENDP

00003a  0000              DCW      0x0000
                  |L8.60|
                          DCD      __put
                  |L8.64|
                          DCD      __get

                          AREA ||i.ungetch||, CODE, READONLY, ALIGN=2

                  ungetch PROC
;;;111    //______________________________________________________________________________________
;;;112    int 		ungetch(int c) {
000000  b501              PUSH     {r0,lr}
;;;113    				if(__stdin.handle.io)
000002  4807              LDR      r0,|L9.32|
000004  6800              LDR      r0,[r0,#0]  ; __stdin
000006  b138              CBZ      r0,|L9.24|
;;;114    					return _buffer_LIFO(__stdin.handle.io->rx,&c,1);
000008  4905              LDR      r1,|L9.32|
00000a  6809              LDR      r1,[r1,#0]  ; __stdin
00000c  2201              MOVS     r2,#1
00000e  6808              LDR      r0,[r1,#0]
000010  4669              MOV      r1,sp
000012  f7fffffe          BL       _buffer_LIFO
                  |L9.22|
;;;115    				else
;;;116    					return EOF;
;;;117    }
000016  bd08              POP      {r3,pc}
                  |L9.24|
000018  f04f30ff          MOV      r0,#0xffffffff        ;116
00001c  e7fb              B        |L9.22|
;;;118    //______________________________________________________________________________________
                          ENDP

00001e  0000              DCW      0x0000
                  |L9.32|
                          DCD      __stdin

                          AREA ||i.ungets||, CODE, READONLY, ALIGN=2

                  ungets PROC
;;;118    //______________________________________________________________________________________
;;;119    int 		ungets(char *c) {
000000  b570              PUSH     {r4-r6,lr}
000002  4604              MOV      r4,r0
;;;120    				if(__stdin.handle.io)
000004  4808              LDR      r0,|L10.40|
000006  6800              LDR      r0,[r0,#0]  ; __stdin
000008  b158              CBZ      r0,|L10.34|
;;;121    					return _buffer_LIFO(__stdin.handle.io->rx,c,strlen(c));
00000a  4620              MOV      r0,r4
00000c  f7fffffe          BL       strlen
000010  4605              MOV      r5,r0
000012  4905              LDR      r1,|L10.40|
000014  6809              LDR      r1,[r1,#0]  ; __stdin
000016  462a              MOV      r2,r5
000018  6808              LDR      r0,[r1,#0]
00001a  4621              MOV      r1,r4
00001c  f7fffffe          BL       _buffer_LIFO
                  |L10.32|
;;;122    				else
;;;123    					return EOF;
;;;124    }
000020  bd70              POP      {r4-r6,pc}
                  |L10.34|
000022  f04f30ff          MOV      r0,#0xffffffff        ;123
000026  e7fb              B        |L10.32|
;;;125    /**
                          ENDP

                  |L10.40|
                          DCD      __stdin
