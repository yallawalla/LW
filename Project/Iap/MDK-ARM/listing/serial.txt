; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\output\serial.o --asm_dir=.\listing\ --list_dir=.\listing\ --depend=.\output\serial.d --cpu=Cortex-M4 --apcs=interwork -O0 --diag_suppress=9931 -I..\ -I..\Inc -I..\..\..\Libraries\STM32F2xx_StdPeriph_Driver\inc -I..\..\..\Libraries\CMSIS\Device\ST\STM32F2xx\Include -I..\..\Pfm6Ctrl\inc\app -I..\..\Pfm6Ctrl\src\wifi -I..\..\..\Utilities\FatFs_R0.09a -I.\RTE\_iap...PFM6 -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.4.0\CMSIS\Core\Include -IC:\Keil_v5\ARM\PACK\Keil\STM32F4xx_DFP\2.9.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include -D__MICROLIB -D__UVISION_VERSION=523 -D_RTE_ -DSTM32F405xx -DUSE_STDPERIPH_DRIVER -DUSE_USB_OTG_FS -D__PFM6__ -DHSE_VALUE=25000000 -DWITH_COM_PORT --omf_browse=.\output\serial.crf ..\Src\serial.c]
                          THUMB

                          AREA ||i.ParseCOM||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_percent
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_d
                          REQUIRE _printf_x
                          REQUIRE _printf_s
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_longlong_hex
                          REQUIRE _printf_str
                  ParseCOM PROC
;;;50     //______________________________________________________________________________________
;;;51     void	ParseCOM(void) {
000000  b5f8              PUSH     {r3-r7,lr}
;;;52     int		i,j;
;;;53     char	*p;
;;;54     
;;;55     			switch(getchar()) {			
000002  4854              LDR      r0,|L1.340|
000004  f7fffffe          BL       getc
000008  2832              CMP      r0,#0x32
00000a  d047              BEQ      |L1.156|
00000c  dc08              BGT      |L1.32|
00000e  2819              CMP      r0,#0x19
000010  d00f              BEQ      |L1.50|
000012  281a              CMP      r0,#0x1a
000014  d02b              BEQ      |L1.110|
000016  281b              CMP      r0,#0x1b
000018  d078              BEQ      |L1.268|
00001a  2831              CMP      r0,#0x31
                  |L1.28|
00001c  d174              BNE      |L1.264|
00001e  e028              B        |L1.114|
                  |L1.32|
000020  2833              CMP      r0,#0x33
000022  d045              BEQ      |L1.176|
000024  2839              CMP      r0,#0x39
000026  d03e              BEQ      |L1.166|
000028  283a              CMP      r0,#0x3a
00002a  d07c              BEQ      |L1.294|
00002c  283f              CMP      r0,#0x3f
00002e  d1f5              BNE      |L1.28|
000030  e043              B        |L1.186|
                  |L1.50|
;;;56     				case _CtrlY:
;;;57     					NVIC_SystemReset();
000032  bf00              NOP      
000034  bf00              NOP      
000036  bf00              NOP      
000038  bf00              NOP      
00003a  bf00              NOP      
00003c  f3bf8f4f          DSB      
000040  bf00              NOP      
000042  bf00              NOP      
000044  bf00              NOP      
000046  4844              LDR      r0,|L1.344|
000048  6800              LDR      r0,[r0,#0]
00004a  f40060e0          AND      r0,r0,#0x700
00004e  4943              LDR      r1,|L1.348|
000050  4308              ORRS     r0,r0,r1
000052  1d00              ADDS     r0,r0,#4
000054  4940              LDR      r1,|L1.344|
000056  6008              STR      r0,[r1,#0]
000058  bf00              NOP      
00005a  bf00              NOP      
00005c  bf00              NOP      
00005e  f3bf8f4f          DSB      
000062  bf00              NOP      
000064  bf00              NOP      
000066  bf00              NOP      
000068  bf00              NOP      
                  |L1.106|
00006a  bf00              NOP      
00006c  e7fd              B        |L1.106|
                  |L1.110|
;;;58     				case _CtrlZ:
;;;59     					while(1);
00006e  bf00              NOP      
                  |L1.112|
000070  e7fe              B        |L1.112|
                  |L1.114|
;;;60     				case '1':
;;;61     					for(j=0; j<5; ++j) {
000072  2600              MOVS     r6,#0
000074  e00f              B        |L1.150|
                  |L1.118|
;;;62     					CanHexMessage(_ID_IAP_ERASE,_SIGN_PAGE+j*_PAGE_SIZE);
000076  2008              MOVS     r0,#8
000078  eb0001c6          ADD      r1,r0,r6,LSL #3
00007c  20a1              MOVS     r0,#0xa1
00007e  f7fffffe          BL       CanHexMessage
;;;63     					for(i=0;i<1000;++i)	
000082  2500              MOVS     r5,#0
000084  e003              B        |L1.142|
                  |L1.134|
;;;64     						App_Loop();
000086  4836              LDR      r0,|L1.352|
000088  6800              LDR      r0,[r0,#0]  ; App_Loop
00008a  4780              BLX      r0
00008c  1c6d              ADDS     r5,r5,#1              ;63
                  |L1.142|
00008e  f5b57f7a          CMP      r5,#0x3e8             ;63
000092  dbf8              BLT      |L1.134|
000094  1c76              ADDS     r6,r6,#1              ;61
                  |L1.150|
000096  2e05              CMP      r6,#5                 ;61
000098  dbed              BLT      |L1.118|
;;;65     					}
;;;66     					break;
00009a  e058              B        |L1.334|
                  |L1.156|
;;;67     				case '2':
;;;68     					CanHexMessage(_ID_IAP_SIGN,0);
00009c  2100              MOVS     r1,#0
00009e  20a5              MOVS     r0,#0xa5
0000a0  f7fffffe          BL       CanHexMessage
;;;69     					break;
0000a4  e053              B        |L1.334|
                  |L1.166|
;;;70     				case '9':
;;;71     					CanHexMessage(_ID_IAP_SIGN,9);
0000a6  2109              MOVS     r1,#9
0000a8  20a5              MOVS     r0,#0xa5
0000aa  f7fffffe          BL       CanHexMessage
;;;72     					break;
0000ae  e04e              B        |L1.334|
                  |L1.176|
;;;73     				case '3':
;;;74     					CanHexMessage(_ID_IAP_GO,0);
0000b0  2100              MOVS     r1,#0
0000b2  20a0              MOVS     r0,#0xa0
0000b4  f7fffffe          BL       CanHexMessage
;;;75     					break;
0000b8  e049              B        |L1.334|
                  |L1.186|
;;;76     				case '?':
;;;77     					RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_CRC, ENABLE);
0000ba  2101              MOVS     r1,#1
0000bc  0308              LSLS     r0,r1,#12
0000be  f7fffffe          BL       RCC_AHB1PeriphClockCmd
;;;78     					CRC_ResetDR();
0000c2  f7fffffe          BL       CRC_ResetDR
;;;79     					printf("\rPFM6 bootloader v%d.%02d %s, <%08X>\r\n",
0000c6  4827              LDR      r0,|L1.356|
0000c8  4a27              LDR      r2,|L1.360|
0000ca  1a10              SUBS     r0,r2,r0
0000cc  0881              LSRS     r1,r0,#2
0000ce  4825              LDR      r0,|L1.356|
0000d0  f7fffffe          BL       CRC_CalcBlockCRC
0000d4  4607              MOV      r7,r0
0000d6  a325              ADR      r3,|L1.364|
0000d8  220a              MOVS     r2,#0xa
0000da  2101              MOVS     r1,#1
0000dc  9000              STR      r0,[sp,#0]
0000de  a026              ADR      r0,|L1.376|
0000e0  f7fffffe          BL       __2printf
;;;80     						SW_version/100,SW_version%100,__DATE__,CRC_CalcBlockCRC(__Vectors, ((_FLASH_TOP-28)-(int)__Vectors)/sizeof(int)));			//crc od vektorjev do zacetka FS
;;;81     					printf("signature %08X:\r\n",_FLASH_TOP);
0000e4  4920              LDR      r1,|L1.360|
0000e6  311c              ADDS     r1,r1,#0x1c
0000e8  a02d              ADR      r0,|L1.416|
0000ea  f7fffffe          BL       __2printf
;;;82     					p=(char *)_SIGN_CRC;
0000ee  4c1e              LDR      r4,|L1.360|
;;;83     					for(i=0;i<8;++i)
0000f0  2500              MOVS     r5,#0
0000f2  e005              B        |L1.256|
                  |L1.244|
;;;84     						printf("%08X\r\n",*(int *)p++);
0000f4  f8541b01          LDR      r1,[r4],#1
0000f8  a02e              ADR      r0,|L1.436|
0000fa  f7fffffe          BL       __2printf
0000fe  1c6d              ADDS     r5,r5,#1              ;83
                  |L1.256|
000100  2d08              CMP      r5,#8                 ;83
000102  dbf7              BLT      |L1.244|
;;;85     					break;
000104  e023              B        |L1.334|
000106  e001              B        |L1.268|
                  |L1.264|
000108  e020              B        |L1.332|
00010a  e00c              B        |L1.294|
                  |L1.268|
;;;86     				case 0x1b:
;;;87     					if(!(__CAN__->BTR & ((CAN_Mode_LoopBack)<<30)))
00010c  482b              LDR      r0,|L1.444|
00010e  6800              LDR      r0,[r0,#0]
000110  f0004080          AND      r0,r0,#0x40000000
000114  b910              CBNZ     r0,|L1.284|
;;;88     						Initialize_CAN(1);
000116  2001              MOVS     r0,#1
000118  f7fffffe          BL       Initialize_CAN
                  |L1.284|
;;;89     					CanHexMessage(_ID_IAP_PING,0);
00011c  2100              MOVS     r1,#0
00011e  20a7              MOVS     r0,#0xa7
000120  f7fffffe          BL       CanHexMessage
;;;90     					break;
000124  e013              B        |L1.334|
                  |L1.294|
;;;91     				case ':':
;;;92     					do p=cgets(getchar(),0); while(!p);
000126  bf00              NOP      
                  |L1.296|
000128  480a              LDR      r0,|L1.340|
00012a  f7fffffe          BL       getc
00012e  4607              MOV      r7,r0
000130  2100              MOVS     r1,#0
000132  f7fffffe          BL       cgets
000136  4604              MOV      r4,r0
000138  2c00              CMP      r4,#0
00013a  d0f5              BEQ      |L1.296|
;;;93     					strcpy(_Iap_string,p);
00013c  4621              MOV      r1,r4
00013e  4820              LDR      r0,|L1.448|
000140  f7fffffe          BL       strcpy
;;;94     					CanHexProg(NULL);
000144  2000              MOVS     r0,#0
000146  f7fffffe          BL       CanHexProg
;;;95     					break;
00014a  e000              B        |L1.334|
                  |L1.332|
;;;96     				default:
;;;97     					break;
00014c  bf00              NOP      
                  |L1.334|
00014e  bf00              NOP                            ;66
;;;98     			}
;;;99     }
000150  bdf8              POP      {r3-r7,pc}
;;;100    //___________________________________________________________________________
                          ENDP

000152  0000              DCW      0x0000
                  |L1.340|
                          DCD      __stdin
                  |L1.344|
                          DCD      0xe000ed0c
                  |L1.348|
                          DCD      0x05fa0000
                  |L1.352|
                          DCD      App_Loop
                  |L1.356|
                          DCD      __Vectors
                  |L1.360|
                          DCD      0x08007fe4
                  |L1.364|
00016c  4a616e20          DCB      "Jan 29 2019",0
000170  32392032
000174  30313900
                  |L1.376|
000178  0d50464d          DCB      "\rPFM6 bootloader v%d.%02d %s, <%08X>\r\n",0
00017c  3620626f
000180  6f746c6f
000184  61646572
000188  20762564
00018c  2e253032
000190  64202573
000194  2c203c25
000198  3038583e
00019c  0d0a00  
00019f  00                DCB      0
                  |L1.416|
0001a0  7369676e          DCB      "signature %08X:\r\n",0
0001a4  61747572
0001a8  65202530
0001ac  38583a0d
0001b0  0a00    
0001b2  00                DCB      0
0001b3  00                DCB      0
                  |L1.436|
0001b4  25303858          DCB      "%08X\r\n",0
0001b8  0d0a00  
0001bb  00                DCB      0
                  |L1.444|
                          DCD      0x4000681c
                  |L1.448|
                          DCD      _Iap_string

                          AREA ||i.Wait||, CODE, READONLY, ALIGN=2

                  Wait PROC
;;;101    extern	volatile int __time__;
;;;102    void		Wait(int t,void (*f)(void)) {
000000  b570              PUSH     {r4-r6,lr}
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;103    int			to=__time__+t;
000006  4805              LDR      r0,|L2.28|
000008  6800              LDR      r0,[r0,#0]  ; __time__
00000a  1946              ADDS     r6,r0,r5
;;;104    				while(to > __time__)
00000c  e001              B        |L2.18|
                  |L2.14|
;;;105    					if(f)
00000e  b104              CBZ      r4,|L2.18|
;;;106    						f();
000010  47a0              BLX      r4
                  |L2.18|
000012  4802              LDR      r0,|L2.28|
000014  6800              LDR      r0,[r0,#0]            ;104  ; __time__
000016  4286              CMP      r6,r0                 ;104
000018  dcf9              BGT      |L2.14|
;;;107    }
00001a  bd70              POP      {r4-r6,pc}
                          ENDP

                  |L2.28|
                          DCD      __time__

                          AREA ||i.cgets||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_c
                          REQUIRE _printf_str
                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_x
                          REQUIRE _printf_longlong_hex
                          REQUIRE _printf_str
                  cgets PROC
;;;9      //______________________________________________________________________________________
;;;10     char	*cgets(int c, int mode)
000000  b570              PUSH     {r4-r6,lr}
;;;11     {
000002  4605              MOV      r5,r0
000004  460e              MOV      r6,r1
;;;12     _buffer		*p=__stdin.handle.io->gets;
000006  482e              LDR      r0,|L3.192|
000008  6800              LDR      r0,[r0,#0]  ; __stdin
00000a  6884              LDR      r4,[r0,#8]
;;;13     			
;;;14     			if(!p)
00000c  b94c              CBNZ     r4,|L3.34|
;;;15     				p=__stdin.handle.io->gets=_buffer_init(__stdin.handle.io->rx->len);
00000e  492c              LDR      r1,|L3.192|
000010  6809              LDR      r1,[r1,#0]  ; __stdin
000012  6809              LDR      r1,[r1,#0]
000014  6948              LDR      r0,[r1,#0x14]
000016  f7fffffe          BL       _buffer_init
00001a  4929              LDR      r1,|L3.192|
00001c  6809              LDR      r1,[r1,#0]  ; __stdin
00001e  4604              MOV      r4,r0
000020  6088              STR      r0,[r1,#8]
                  |L3.34|
;;;16     			switch(c) {
000022  2d0a              CMP      r5,#0xa
000024  d00d              BEQ      |L3.66|
000026  dc05              BGT      |L3.52|
000028  f1b53fff          CMP      r5,#0xffffffff
00002c  d007              BEQ      |L3.62|
00002e  2d08              CMP      r5,#8
000030  d11c              BNE      |L3.108|
000032  e00e              B        |L3.82|
                  |L3.52|
000034  2d0d              CMP      r5,#0xd
000036  d003              BEQ      |L3.64|
000038  2d7f              CMP      r5,#0x7f
00003a  d117              BNE      |L3.108|
00003c  e00a              B        |L3.84|
                  |L3.62|
;;;17     				case EOF:		
;;;18     					break;
00003e  e03b              B        |L3.184|
                  |L3.64|
;;;19     				case '\r':
;;;20     				case '\n':
000040  bf00              NOP      
                  |L3.66|
;;;21     					*p->_push = '\0';
000042  2000              MOVS     r0,#0
000044  6861              LDR      r1,[r4,#4]
000046  7008              STRB     r0,[r1,#0]
;;;22     					p->_push=p->_pull=p->_buf;
000048  6820              LDR      r0,[r4,#0]
00004a  60a0              STR      r0,[r4,#8]
00004c  6060              STR      r0,[r4,#4]
;;;23     					return(p->_buf);
00004e  6820              LDR      r0,[r4,#0]
                  |L3.80|
;;;24     				case 0x08:
;;;25     				case 0x7F:
;;;26     					if(p->_push != p->_pull) {
;;;27     						--p->_push;
;;;28     						if(mode)
;;;29     							printf("\b \b");
;;;30     					}
;;;31     					break;
;;;32     				default:
;;;33     					if(p->_push != &p->_buf[p->len-1])
;;;34     						*p->_push++ = c;
;;;35     					else  {
;;;36     						*p->_push=c;
;;;37     						if(mode)
;;;38     							printf("\b");
;;;39     					}
;;;40     					if(mode) {
;;;41     						if(isprint(c))
;;;42     							printf("%c",c);
;;;43     						else
;;;44     							printf("%c%02X%c",'<',c,'>');
;;;45     					}
;;;46     					break;
;;;47     			}
;;;48     			return(NULL);
;;;49     }
000050  bd70              POP      {r4-r6,pc}
                  |L3.82|
000052  bf00              NOP                            ;25
                  |L3.84|
000054  e9d40101          LDRD     r0,r1,[r4,#4]         ;26
000058  4288              CMP      r0,r1                 ;26
00005a  d006              BEQ      |L3.106|
00005c  6860              LDR      r0,[r4,#4]            ;27
00005e  1e40              SUBS     r0,r0,#1              ;27
000060  6060              STR      r0,[r4,#4]            ;27
000062  b116              CBZ      r6,|L3.106|
000064  a017              ADR      r0,|L3.196|
000066  f7fffffe          BL       __2printf
                  |L3.106|
00006a  e025              B        |L3.184|
                  |L3.108|
00006c  6960              LDR      r0,[r4,#0x14]         ;33
00006e  1e40              SUBS     r0,r0,#1              ;33
000070  6821              LDR      r1,[r4,#0]            ;33
000072  4408              ADD      r0,r0,r1              ;33
000074  6861              LDR      r1,[r4,#4]            ;33
000076  4288              CMP      r0,r1                 ;33
000078  d004              BEQ      |L3.132|
00007a  6862              LDR      r2,[r4,#4]            ;34
00007c  1c50              ADDS     r0,r2,#1              ;34
00007e  6060              STR      r0,[r4,#4]            ;34
000080  7015              STRB     r5,[r2,#0]            ;34
000082  e005              B        |L3.144|
                  |L3.132|
000084  6861              LDR      r1,[r4,#4]            ;36
000086  700d              STRB     r5,[r1,#0]            ;36
000088  b116              CBZ      r6,|L3.144|
00008a  a00f              ADR      r0,|L3.200|
00008c  f7fffffe          BL       __2printf
                  |L3.144|
000090  b18e              CBZ      r6,|L3.182|
000092  f7fffffe          BL       __rt_ctype_table
000096  6800              LDR      r0,[r0,#0]            ;41
000098  5d40              LDRB     r0,[r0,r5]            ;41
00009a  f000003e          AND      r0,r0,#0x3e           ;41
00009e  b120              CBZ      r0,|L3.170|
0000a0  4629              MOV      r1,r5                 ;42
0000a2  a00a              ADR      r0,|L3.204|
0000a4  f7fffffe          BL       __2printf
0000a8  e005              B        |L3.182|
                  |L3.170|
0000aa  233e              MOVS     r3,#0x3e              ;44
0000ac  462a              MOV      r2,r5                 ;44
0000ae  213c              MOVS     r1,#0x3c              ;44
0000b0  a007              ADR      r0,|L3.208|
0000b2  f7fffffe          BL       __2printf
                  |L3.182|
0000b6  bf00              NOP                            ;46
                  |L3.184|
0000b8  bf00              NOP                            ;18
0000ba  2000              MOVS     r0,#0                 ;48
0000bc  e7c8              B        |L3.80|
;;;50     //______________________________________________________________________________________
                          ENDP

0000be  0000              DCW      0x0000
                  |L3.192|
                          DCD      __stdin
                  |L3.196|
0000c4  08200800          DCB      "\b \b",0
                  |L3.200|
0000c8  0800              DCB      "\b",0
0000ca  00                DCB      0
0000cb  00                DCB      0
                  |L3.204|
0000cc  256300            DCB      "%c",0
0000cf  00                DCB      0
                  |L3.208|
0000d0  25632530          DCB      "%c%02X%c",0
0000d4  32582563
0000d8  00      
0000d9  00                DCB      0
0000da  00                DCB      0
0000db  00                DCB      0

;*** Start embedded assembler ***

#line 1 "..\\Src\\serial.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___8_serial_c_cgets____REV16|
#line 463 "C:\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\5.4.0\\CMSIS\\Core\\Include\\cmsis_armcc.h"
|__asm___8_serial_c_cgets____REV16| PROC
#line 464

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___8_serial_c_cgets____REVSH|
#line 478
|__asm___8_serial_c_cgets____REVSH| PROC
#line 479

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___8_serial_c_cgets____RRX|
#line 665
|__asm___8_serial_c_cgets____RRX| PROC
#line 666

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
