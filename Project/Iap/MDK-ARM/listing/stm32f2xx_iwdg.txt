; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\output\stm32f2xx_iwdg.o --asm_dir=.\listing\ --list_dir=.\listing\ --depend=.\output\stm32f2xx_iwdg.d --cpu=Cortex-M4 --apcs=interwork -O0 --diag_suppress=9931 -I..\ -I..\Inc -I..\..\..\Libraries\STM32F2xx_StdPeriph_Driver\inc -I..\..\..\Libraries\CMSIS\Device\ST\STM32F2xx\Include -I..\..\Pfm6Ctrl\inc\app -I..\..\Pfm6Ctrl\src\wifi -I..\..\..\Utilities\FatFs_R0.09a -I.\RTE\_iap...PFM6 -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.4.0\CMSIS\Core\Include -IC:\Keil_v5\ARM\PACK\Keil\STM32F4xx_DFP\2.9.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include -D__MICROLIB -D__UVISION_VERSION=523 -D_RTE_ -DSTM32F405xx -DUSE_STDPERIPH_DRIVER -DUSE_USB_OTG_FS -D__PFM6__ -DHSE_VALUE=25000000 -DWITH_COM_PORT --omf_browse=.\output\stm32f2xx_iwdg.crf ..\..\..\Libraries\STM32F2xx_StdPeriph_Driver\src\stm32f2xx_iwdg.c]
                          THUMB

                          AREA ||i.IWDG_Enable||, CODE, READONLY, ALIGN=2

                  IWDG_Enable PROC
;;;206      */
;;;207    void IWDG_Enable(void)
000000  f64c40cc          MOV      r0,#0xcccc
;;;208    {
;;;209      IWDG->KR = KR_KEY_ENABLE;
000004  4901              LDR      r1,|L1.12|
000006  6008              STR      r0,[r1,#0]
;;;210    }
000008  4770              BX       lr
;;;211    
                          ENDP

00000a  0000              DCW      0x0000
                  |L1.12|
                          DCD      0x40003000

                          AREA ||i.IWDG_GetFlagStatus||, CODE, READONLY, ALIGN=2

                  IWDG_GetFlagStatus PROC
;;;235      */
;;;236    FlagStatus IWDG_GetFlagStatus(uint16_t IWDG_FLAG)
000000  4601              MOV      r1,r0
;;;237    {
;;;238      FlagStatus bitstatus = RESET;
000002  2000              MOVS     r0,#0
;;;239      /* Check the parameters */
;;;240      assert_param(IS_IWDG_FLAG(IWDG_FLAG));
;;;241      if ((IWDG->SR & IWDG_FLAG) != (uint32_t)RESET)
000004  4a03              LDR      r2,|L2.20|
000006  68d2              LDR      r2,[r2,#0xc]
000008  400a              ANDS     r2,r2,r1
00000a  b10a              CBZ      r2,|L2.16|
;;;242      {
;;;243        bitstatus = SET;
00000c  2001              MOVS     r0,#1
00000e  e000              B        |L2.18|
                  |L2.16|
;;;244      }
;;;245      else
;;;246      {
;;;247        bitstatus = RESET;
000010  2000              MOVS     r0,#0
                  |L2.18|
;;;248      }
;;;249      /* Return the flag status */
;;;250      return bitstatus;
;;;251    }
000012  4770              BX       lr
;;;252    
                          ENDP

                  |L2.20|
                          DCD      0x40003000

                          AREA ||i.IWDG_ReloadCounter||, CODE, READONLY, ALIGN=2

                  IWDG_ReloadCounter PROC
;;;180      */
;;;181    void IWDG_ReloadCounter(void)
000000  f64a20aa          MOV      r0,#0xaaaa
;;;182    {
;;;183      IWDG->KR = KR_KEY_RELOAD;
000004  4901              LDR      r1,|L3.12|
000006  6008              STR      r0,[r1,#0]
;;;184    }
000008  4770              BX       lr
;;;185    
                          ENDP

00000a  0000              DCW      0x0000
                  |L3.12|
                          DCD      0x40003000

                          AREA ||i.IWDG_SetPrescaler||, CODE, READONLY, ALIGN=2

                  IWDG_SetPrescaler PROC
;;;154      */
;;;155    void IWDG_SetPrescaler(uint8_t IWDG_Prescaler)
000000  4901              LDR      r1,|L4.8|
;;;156    {
;;;157      /* Check the parameters */
;;;158      assert_param(IS_IWDG_PRESCALER(IWDG_Prescaler));
;;;159      IWDG->PR = IWDG_Prescaler;
000002  6048              STR      r0,[r1,#4]
;;;160    }
000004  4770              BX       lr
;;;161    
                          ENDP

000006  0000              DCW      0x0000
                  |L4.8|
                          DCD      0x40003000

                          AREA ||i.IWDG_SetReload||, CODE, READONLY, ALIGN=2

                  IWDG_SetReload PROC
;;;167      */
;;;168    void IWDG_SetReload(uint16_t Reload)
000000  4901              LDR      r1,|L5.8|
;;;169    {
;;;170      /* Check the parameters */
;;;171      assert_param(IS_IWDG_RELOAD(Reload));
;;;172      IWDG->RLR = Reload;
000002  6088              STR      r0,[r1,#8]
;;;173    }
000004  4770              BX       lr
;;;174    
                          ENDP

000006  0000              DCW      0x0000
                  |L5.8|
                          DCD      0x40003000

                          AREA ||i.IWDG_WriteAccessCmd||, CODE, READONLY, ALIGN=2

                  IWDG_WriteAccessCmd PROC
;;;134      */
;;;135    void IWDG_WriteAccessCmd(uint16_t IWDG_WriteAccess)
000000  4901              LDR      r1,|L6.8|
;;;136    {
;;;137      /* Check the parameters */
;;;138      assert_param(IS_IWDG_WRITE_ACCESS(IWDG_WriteAccess));
;;;139      IWDG->KR = IWDG_WriteAccess;
000002  6008              STR      r0,[r1,#0]
;;;140    }
000004  4770              BX       lr
;;;141    
                          ENDP

000006  0000              DCW      0x0000
                  |L6.8|
                          DCD      0x40003000

;*** Start embedded assembler ***

#line 1 "..\\..\\..\\Libraries\\STM32F2xx_StdPeriph_Driver\\src\\stm32f2xx_iwdg.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___16_stm32f2xx_iwdg_c_15798b01____REV16|
#line 463 "C:\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\5.4.0\\CMSIS\\Core\\Include\\cmsis_armcc.h"
|__asm___16_stm32f2xx_iwdg_c_15798b01____REV16| PROC
#line 464

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___16_stm32f2xx_iwdg_c_15798b01____REVSH|
#line 478
|__asm___16_stm32f2xx_iwdg_c_15798b01____REVSH| PROC
#line 479

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___16_stm32f2xx_iwdg_c_15798b01____RRX|
#line 665
|__asm___16_stm32f2xx_iwdg_c_15798b01____RRX| PROC
#line 666

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
